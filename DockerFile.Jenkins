# Use the official Jenkins LTS image as the base image
FROM jenkins/jenkins:lts

# Switch to root user to install Docker
USER root

# Update package lists and install required packages including ICU libraries and .NET SDK
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    wget \
    apt-transport-https \
    libicu-dev \  
    && wget https://dot.net/v1/dotnet-install.sh \
    && chmod +x dotnet-install.sh \
    && ./dotnet-install.sh --channel 8.0 --install-dir /usr/share/dotnet \
    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Set the environment variable for .NET
ENV DOTNET_ROOT=/usr/share/dotnet
ENV PATH="$PATH:$DOTNET_ROOT"

# Install dependencies for Docker CLI and Docker Compose
RUN apt-get update && \
    apt-get install -y \
    curl \
    git \
    docker.io \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install Docker Compose
RUN curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod +x /usr/local/bin/docker-compose

# Create the 'docker' group if it doesn't exist
RUN groupadd -f docker

# Add Jenkins user to the Docker group
RUN usermod -aG docker jenkins

# Expose the Docker API via TCP (for Windows users)
ENV DOCKER_HOST=tcp://host.docker.internal:2375

# Expose Jenkins port
EXPOSE 8080

# Set the working directory for Jenkins
USER jenkins
WORKDIR /var/jenkins_home

# Default entrypoint to start Jenkins
ENTRYPOINT ["/bin/tini", "--", "/usr/local/bin/jenkins.sh"]